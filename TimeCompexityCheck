// 1+(1+2)+(1+2+3)....+n Time Complexity Check
package timecompexitycheck;

public class TimeCompexityCheck {

    public static void main(String[] args) {

        System.out.println(withnsqure(1000));
        System.out.println(withN(1000));
        System.out.println(withn1(1000));
    }

    public static int withnsqure(int n) {
        int add = 0;
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= i; j++) {
                add = add + j;
            }
        }

        return add;
    }

    public static int withN(int n) {
        int add = 0;
        for (int i = 1; i <= n; i++) {
            add = add + (int) (Math.pow(i, 2) + i) / 2;
        }

        return add;
    }

    public static int withn1(int n) {
        int add;
        int equ1=(n*(n+1)*(2*n+1))/6;
        int equ2=((int) Math.pow(n, 2)+n)/2;
        add = (equ1+equ2)/2;
        
        
    return add;
    }

}
